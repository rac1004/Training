package com.First;

import java.util.List;
import java.util.ArrayList;
import java.util.function.IntPredicate;
import java.util.function.Predicate;
import java.util.function.IntConsumer;
import java.util.stream.Collectors;
import java.util.Optional;
import java.util.stream.IntStream;

public class PredicateDemo2 {

	public static void main(String[] args) {
		PrintMessage printMessage = ()-> System.out.println("Print message new way");
		printMessage.printMsg();
		
		IntStream.rangeClosed(1,100).filter(value -> value%2==0).forEach(value -> System.out.println(value));
	
		List<String> lst = new ArrayList<>();
		lst.add("abc");
		lst.add("xyz");
		lst.add("pqr");
		
	
		//List<String> lst1 = lst.stream().filter(s->s.startsWith("a")).collect(Collectors.toList());
		//print directly go with for each and comment print
		//System.out.println(lst1);
		lst.stream().filter(s->s.startsWith("a")).forEach(System.out::println);
		lst.parallelStream().filter(s->s.startsWith("a")).forEach(System.out::println);
		
		Optional<String> str = lst.stream().filter(s->s.startsWith("b")).findAny();
	}
}
